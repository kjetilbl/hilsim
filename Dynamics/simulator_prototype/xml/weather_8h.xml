<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="weather_8h" kind="file" language="C++">
    <compoundname>weather.h</compoundname>
    <includes local="no">Eigen/Dense</includes>
    <includedby refid="weather_8cpp" local="yes">src/weather.cpp</includedby>
    <incdepgraph>
      <node id="96">
        <label>include/weather.h</label>
        <link refid="weather.h"/>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>Eigen/Dense</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_weather" prot="public">Weather</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="weather_8h_1a98c311f8f84d62784ec0499c9df9816d" prot="public" static="no">
        <type>Matrix&lt; double, 6, 1 &gt;</type>
        <definition>typedef Matrix&lt;double, 6, 1&gt; Vector6d</definition>
        <argsstring></argsstring>
        <name>Vector6d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/weather.h" line="6" column="1" bodyfile="include/weather.h" bodystart="6" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>WEATHER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WEATHER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Dense&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Matrix&lt;double,<sp/>6,<sp/>1&gt;<sp/>Vector6d;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>module<sp/>contains<sp/>models<sp/>for<sp/>wind<sp/>and<sp/>current.<sp/>The<sp/>module<sp/>outputs<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>current<sp/>and<sp/>wind<sp/>speed<sp/>and<sp/>angle<sp/>at<sp/>any<sp/>given<sp/>time,<sp/>and<sp/>it<sp/>is<sp/>left<sp/>up<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vessel<sp/>module<sp/>to<sp/>convert<sp/>this<sp/>to<sp/>forces<sp/>for<sp/>the<sp/>given<sp/>vessel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setting<sp/>new<sp/>wind<sp/>speed<sp/>should<sp/>be<sp/>done<sp/>by<sp/>inputting<sp/>the<sp/>desired<sp/>wind<sp/>speed<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>10<sp/>metres<sp/>above<sp/>the<sp/>surface,<sp/>U_10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="class_weather" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_weather" kindref="compound">Weather</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Speed<sp/>and<sp/>angle<sp/>for<sp/>environmental<sp/>forces.<sp/>Angle<sp/>defined<sp/>as<sp/>0=going<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>north.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wind_angle,<sp/>current_angle,<sp/>wind_speed,<sp/>current_speed,<sp/>wind_mean_speed,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wind_mean_angle,<sp/>current_mean_speed,<sp/>current_mean_angle,<sp/>wind_std_dev,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current_std_dev;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetWindData(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mean_wind_speed_in,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mean_wind_angle_in,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>height);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetCurrentData(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mean_current_speed_in,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mean_current_angle_in);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetMeanWindSpeedAtHeight(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>U_10,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UpdateWindSpeed();</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="include/weather.h"/>
  </compounddef>
</doxygen>
